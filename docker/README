Collabora Online docker

This directory contains everything needed to compile a
working docker container with Collabora Online.

Docker image can be built from packages or from source code.

All docker images built from this directory can be run with a TZ environment variable
to set the server timezone to something other than UTC.

The Dockerfile uses the --mount parameter of RUN command. Actually it is used for
building  Collabora Online images for Collabora Partners/Customers, who have the secret
URL of supported packages. The --mount parameter requires BuildKit.

  export DOCKER_BUILDKIT=1

Examples:

1. Build latest CODE based on Ubuntu 18.04 LTS

  cd from-packages
  docker build --no-cache -t mydomain/code -f Ubuntu .

2. Build latest CODE based on Ubuntu 18.04 LTS 100% open source

The brand package of CODE is not open source. To build an image without it:

  cd from-packages
  docker build --no-cache --build-arg nobrand=yes -t mydomain/code -f Ubuntu .

3. Build Collabora Online 22.05 based on Ubuntu 18.04 LTS

  cd from-packages
  # Get your secret URL key from https://support.collaboraoffice.com/ (Collabora Partners/Customers)
  # e.g. the secret key is Example-413539ece39485afc35b4a469adfde0a279d2fd2
  echo Example-413539ece39485afc35b4a469adfde0a279d2fd2 > secret_key
  docker build --no-cache --secret id=secret_key,src=secret_key --build-arg type=cool -t mydomain/cool -f Ubuntu .

4. Build Collabora Online 22.05 based on RHEL8

  cd from-packages
  # Get your secret URL key from https://support.collaboraoffice.com/ (Collabora Partners/Customers)
  # e.g. the secret key is Example-413539ece39485afc35b4a469adfde0a279d2fd2
  echo Example-413539ece39485afc35b4a469adfde0a279d2fd2 > secret_key
  docker build --no-cache --secret id=secret_key,src=secret_key --build-arg type=cool -t mydomain/cool -f RHEL8 .

5. Build Collabora Online 22.05 license key enabled version based on Ubuntu 18.04 LTS

   cd from-packages
   docker build --no-cache --build-arg type=key -t mydomain/cool -f Ubuntu .

6. Build Collabora Online from master branch (from source code)

   cd from-source
   ./build.sh

Check build.sh for more build options!
